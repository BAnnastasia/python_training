# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from conact import Contact
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import allure



@allure.epic("Contact")
class TestAddContact():
  data_test = [
    ("Firstname203", "Lastname", "Minsk Kalinina 18-304", "email@test.by", "+375440000000", "1994", "January","2","https://www.google.com/"),
    ("","","","","","","","-","")
  ]

  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()

  @pytest.mark.parametrize('firstname, lastname, address, email, mobile, byear, bmonth, bday, homepage', data_test)
  @allure.description("This test successfully creates a contact")
  def test_add_contact(self, firstname,lastname,address,email, mobile, byear, bmonth, bday, homepage):
    self.open_home_page()
    self.login()
    self.open_contact_page()
    self.create_contact(Contact(firstname,lastname,address,email, mobile,byear,bmonth,bday,homepage))
    self.return_home_page()
    self.logout()

  def logout(self):
      with allure.step("Logout"):
          self.driver.find_element(By.LINK_TEXT, "Logout").click()

  def return_home_page(self):
    with allure.step("Return home page"):
      self.driver.find_element(By.LINK_TEXT, "home page").click()

  def create_contact(self, contact):
    with allure.step("Fill contact form"):
      self.driver.find_element(By.NAME, "firstname").click()
      self.driver.find_element(By.NAME, "firstname").send_keys(contact.firstname)
      self.driver.find_element(By.NAME, "lastname").click()
      self.driver.find_element(By.NAME, "lastname").send_keys(contact.lastname)
      self.driver.find_element(By.NAME, "address").click()
      self.driver.find_element(By.NAME, "address").send_keys(contact.address)
      self.driver.find_element(By.NAME, "email").click()
      self.driver.find_element(By.NAME, "email").send_keys(contact.email)
      self.driver.find_element(By.NAME, "byear").click()
      self.driver.find_element(By.NAME, "byear").send_keys(contact.byear)
      print(f"дата {contact.bday}")
      self.driver.find_element(By.NAME, "bmonth").click()
      dropdown = self.driver.find_element(By.NAME, "bmonth")
      dropdown.find_element(By.XPATH, f"//option[. = '{contact.bmonth}']").click()
      self.driver.find_element(By.NAME, "bday").click()
      dropdown = self.driver.find_element(By.NAME, "bday")
      if contact.bday.isdigit():
        dropdown.find_element(By.XPATH, f"//option[. = '{int(contact.bday)}']").click()
      else:
        dropdown.find_element(By.XPATH, f"//option[. = '{contact.bday}']").click()
      self.driver.find_element(By.NAME, "mobile").click()
      self.driver.find_element(By.NAME, "mobile").send_keys(contact.mobile)
      self.driver.find_element(By.NAME, "homepage").click()
      self.driver.find_element(By.NAME, "homepage").send_keys(contact.homepage)
    with allure.step("Submit contact creation"):
      self.driver.find_element(By.XPATH, "(//input[@name=\'submit\'])[2]").click()

  def open_contact_page(self):
    with allure.step("Open contact page"):
      self.driver.find_element(By.LINK_TEXT, "add new").click()

  def login(self):
    with allure.step("Login"):
      self.driver.find_element(By.NAME, "user").click()
      self.driver.find_element(By.NAME, "user").send_keys("admin")
      self.driver.find_element(By.NAME, "pass").click()
      self.driver.find_element(By.NAME, "pass").send_keys("secret")
      self.driver.find_element(By.XPATH, "//input[@value=\'Login\']").click()

  def open_home_page(self):
    with allure.step("Open home page"):
      self.driver.get("http://mac-minik.local/addressbook/index.php")